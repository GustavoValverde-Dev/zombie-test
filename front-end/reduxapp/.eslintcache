[{"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\index.js":"1","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\reportWebVitals.js":"2","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\App.js":"3","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\routes.js":"4","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\store.js":"5","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\rootReducer.js":"6","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesReducer.js":"7","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesTypes.js":"8","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\views\\main\\Main.js":"9","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\views\\resource\\Resources.js":"10","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesActions.js":"11","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\services\\auth.js":"12"},{"size":214,"mtime":1607299227902,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607299222648,"results":"16","hashOfConfig":"14"},{"size":858,"mtime":1607299507182,"results":"17","hashOfConfig":"14"},{"size":379,"mtime":1607135348083,"results":"18","hashOfConfig":"14"},{"size":214,"mtime":1607134980992,"results":"19","hashOfConfig":"14"},{"size":851,"mtime":1607134908171,"results":"20","hashOfConfig":"14"},{"size":190,"mtime":1607134644229,"results":"21","hashOfConfig":"14"},{"size":606,"mtime":1607198818747,"results":"22","hashOfConfig":"14"},{"size":2811,"mtime":1607198801439,"results":"23","hashOfConfig":"14"},{"size":1014,"mtime":1607134790634,"results":"24","hashOfConfig":"14"},{"size":339,"mtime":1607299285402,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j7dqjb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\index.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\reportWebVitals.js",[],["53","54"],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\App.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\routes.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\store.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\rootReducer.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesReducer.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesTypes.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\views\\main\\Main.js",["55"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, } from 'reactstrap'\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12 btn btn-info\">\r\n                    Sistema para administração de recursos\r\n\r\n                    <button className=\"btn btn-danger\">teste bootstrap</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        main: state.main\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Main)  ","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\views\\resource\\Resources.js",["56"],"import React, { useEffect } from 'react'  \r\nimport { connect } from 'react-redux'  \r\nimport { GethResources } from '../../redux/resource/resourcesActions'  \r\nfunction Resources ({ resourcesData, GethResources }) {  \r\n  useEffect(() => {  \r\n    GethResources()  \r\n  }, [])  \r\n  return resourcesData.loading ? (  \r\n    <h2>Loading</h2>  \r\n  ) : resourcesData.error ? (  \r\n    <h2>{resourcesData.error}</h2>  \r\n  ) : (  \r\n    <div>  \r\n     <div class=\"row\">    \r\n    <div class=\"col-sm-12 btn btn-info\">    \r\n     Teste    \r\n    </div>    \r\n  </div>   \r\n      <div>  \r\n        {resourcesData &&  \r\n          resourcesData.resources &&  \r\n          resourcesData.resources.map(resource => <p>{resource.Email}</p>)}  \r\n      </div>  \r\n      <table class=\"table\" >    \r\n                <thead class=\"thead-dark\">    \r\n                    <tr>    \r\n                        <th scope=\"col\">Id</th>    \r\n                        <th scope=\"col\">Descrição</th>    \r\n                        <th scope=\"col\">Quantidade</th>    \r\n                        <th scope=\"col\">Observação</th>    \r\n                        <th scope=\"col\"> </th>    \r\n                        <th scope=\"col\"> </th>    \r\n                    </tr>    \r\n                </thead>    \r\n                <tbody> \r\n\r\n                    <tr key=\"1\"> \r\n                        <td>Água</td>    \r\n                        <td>Para matar a sede</td>    \r\n                        <td>32</td>    \r\n                        <td>Teste</td>    \r\n                        <td><button className=\"btn btn-warning\">Editar</button></td>\r\n                        <td><button className=\"btn btn-danger\">Excluir</button></td>   \r\n                    </tr>   \r\n                {/* {\r\n                    resourcesData === null ?\r\n                    null\r\n                :\r\n                resourcesData.resource.map(item => {    \r\n                    return <tr key={item.Id}> \r\n                        <td>{item.Department}</td>    \r\n                        <td>{item.Description}</td>    \r\n                        <td>{item.Quantity}</td>    \r\n                        <td>{item.Observation}</td>    \r\n                        <td><button className=\"btn btn-warning\">Editar</button></td>\r\n                        <td><button className=\"btn btn-danger\">Excluir</button></td>                             \r\n                    </tr>    \r\n                })}     */}\r\n                </tbody>    \r\n            </table>    \r\n    </div>  \r\n  )  \r\n}  \r\n  \r\nconst mapStateToProps = state => {  \r\n  return {  \r\n    resourcesData: state.resources  \r\n  }  \r\n}  \r\n  \r\nconst mapDispatchToProps = dispatch => {  \r\n  return {  \r\n    GethResources: () => dispatch(GethResources())  \r\n  }  \r\n}  \r\n  \r\nexport default connect(  \r\n  mapStateToProps,  \r\n  mapDispatchToProps  \r\n)(Resources)  ","C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\resource\\resourcesActions.js",[],"C:\\projects\\zombie-test\\front-end\\reduxapp\\src\\components\\redux\\services\\auth.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":7,"column":6,"nodeType":"67","endLine":7,"endColumn":8,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GethResources'. Either include it or remove the dependency array. If 'GethResources' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["71"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [GethResources]",{"range":"74","text":"75"},[268,270],"[GethResources]"]